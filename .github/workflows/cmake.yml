name: CMake

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  macos-cmake:
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install nlohmann/json
        run: brew install nlohmann-json

      - name: Clone SQLiteCpp repository
        run: |
          git clone https://github.com/SRombauts/SQLiteCpp.git
          cd SQLiteCpp
          mkdir build
          cd build
          cmake ..
          make
          sudo make install

      - name: Install ncurses
        run: brew install ncurses

      - name: Install Sqlite
        run: brew install sqlite

      - name: Configure CMake
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

      - name: Build
        run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

  linux-cmake:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Update apt-get
        run: sudo apt-get update

      - name: Install CMake, Make, and G++
        run: sudo apt-get install -y cmake make g++

      - name: Install cURL
        run: sudo apt-get install -y curl libcurl4-openssl-dev

      - name: Install nlohmann/json
        run: sudo apt-get install -y nlohmann-json3-dev

      - name: Install ncurses
        run: sudo apt-get install -y libncurses5-dev

      - name: Install Sqlite
        run: sudo apt install sqlite3

      - name: Clone SQLiteCpp repository
        run: |
          git clone https://github.com/SRombauts/SQLiteCpp.git
          cd SQLiteCpp
          mkdir build
          cd build
          cmake ..
          make
          sudo make install

      - name: Configure CMake
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

      - name: Build
        run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}
